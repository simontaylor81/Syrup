<UserControl x:Class="ShaderEditorApp.Projects.ProjectBrowser"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:srpvm="clr-namespace:ShaderEditorApp.ViewModel"
             xmlns:mvvm="clr-namespace:ShaderEditorApp.MVVMUtil"
             xmlns:vm="clr-namespace:ShaderEditorApp.ViewModel"
             xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="200">

    <UserControl.Resources>

        <mvvm:BoolToBoldConverter x:Key="BoolToBoldConverter"/>

        <!-- Style to apply to the nodes. -->
        <Style x:Key="NodeStyle" TargetType="TreeViewItem">
            <Setter Property="IsExpanded" Value="True"/>

            <!-- Each item has a context menu containing the commands exposed by the view model. -->
            <Setter Property="ContextMenu">
                <Setter.Value>
                    <ContextMenu ItemsSource="{Binding MenuItems}"
                                 UsesItemContainerTemplate="True">
                        <ContextMenu.Resources>
                            <ItemContainerTemplate  DataType="{x:Type vm:MenuItemViewModel}">
                                <MenuItem UsesItemContainerTemplate="True"
                                          ItemsSource="{Binding Items}"
                                          Header="{Binding Header}"
                                          Command="{Binding Command}"
                                          CommandParameter="{Binding CommandParameter}"
                                          IsEnabled="{Binding IsEnabled}"
                                          IsCheckable="{Binding IsCheckable}"
                                          IsChecked="{Binding IsChecked}" />
                            </ItemContainerTemplate>
                            <ItemContainerTemplate DataType="{x:Type vm:SeparatorViewModel}">
                                <Separator />
                            </ItemContainerTemplate>
                        </ContextMenu.Resources>
                    </ContextMenu>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Data template for the items in the tree. -->
        <HierarchicalDataTemplate x:Key="NodeTemplate" ItemsSource="{Binding Children}">
            <TextBlock Text="{Binding DisplayName}"
                       FontWeight="{Binding IsDefault, Converter={StaticResource BoolToBoldConverter}}"/>
        </HierarchicalDataTemplate>

    </UserControl.Resources>

    <Grid>
        <TreeView x:Name="projectTree" Focusable="True" TreeViewItem.MouseDoubleClick="OnItemDoubleClick"
                  ItemsSource="{Binding RootNodes}"
                  ItemTemplate="{StaticResource NodeTemplate}"
                  ItemContainerStyle="{StaticResource NodeStyle}"
                  SelectedItemChanged="projectTree_SelectedItemChanged"
                  dd:DragDrop.IsDragSource="True"
                  dd:DragDrop.IsDropTarget="True"
                  dd:DragDrop.DropHandler="{Binding}"/>
    </Grid>
</UserControl>
